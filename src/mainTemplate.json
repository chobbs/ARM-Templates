{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "loadBalancerType": {
      "type": "string",
      "defaultValue": "external",
      "allowedValues": [
        "internal",
        "external"
      ],
      "metadata": {
        "description": "Setup the load balancer internal or external."
      }
    },
    "influxTags": {
      "type": "object",
      "defaultValue": {
        "provider": "influxdata",
        "tracking": "pid-300e07de-2c76-5904-be70-589ac8f15cf8"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    },
    "chronograf": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Provision a machine with Chronograf on it"
      }
    },
    "jumpbox": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Optionally add a virtual machine to the deployment which you can use to connect and manage virtual machines on the internal network"
      }
    },
    "vmSizeDataNodes": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS13"
      ],
      "metadata": {
        "description": "Size of the InfluxEnterprise data nodes"
      }
    },
    "vmDataNodeCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of InfluxEnterprise data nodes"
      }
    },
    "vmSizeMetaNodes": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS13"
      ],
      "metadata": {
        "description": "Size of the InfluxEnterprise meta nodes, 3 of these will be provisioned"
      }
    },
      "vmClientNodeCount": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Number of IinfluxEnterprise client nodes to provision (Setting this to zero puts the data nodes on the load balancer)"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines"
      }
    },
    "password": {
      "type": "object",
      "metadata": {
        "description": ""
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "ResourceGroup",
        "westus",
        "eastus",
        "eastus2",
        "centralus",
        "southcentralus",
        "northcentralus",
        "eastasia",
        "southeastasia",
        "westeurope",
        "northeurope"
      ],
      "defaultValue": "ResourceGroup",
      "metadata": {
        "description": "Location where resources will be provisioned.  A value of 'ResourceGroup' will deploy the resource to the same location of the resource group the resources are provisioned into"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "influx-vnet",
      "metadata": {
        "description": "Virtual Network"
      }
    }
  },
  "variables": {
    "templateBaseUrl": "https://raw.githubusercontent.com/chobbs/ARM-Templates/master/src/",
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), '/partials/shared-resources.json')]",
    "clientPre": "[split(string(parameters('vmClientNodeCount')), '')[0]]",
    "metaTemplateUrl": "[concat(variables('templateBaseUrl'), 'machines/meta-nodes-resources.json')]",
    "jumpboxTemplates": {
      "No": "empty/empty-resources.json",
      "Yes": "machines/jumpbox-resources.json"
    },
    "jumpboxTemplateUrl": "[concat(variables('templateBaseUrl'), variables('jumpboxTemplates')[parameters('jumpbox')])]",
    "chronografTemplates": {
      "No": "empty/empty-resources.json",
      "Yes": "machines/chronograf-resources.json"
    },
    "chronografTemplateUrl": "[concat(variables('templateBaseUrl'), variables('chronografTemplates')[parameters('chronograf')])]",
    "commonInstallParams": "[parameters('vmDataNodeCount')]",
    "ubuntuScripts": [
      "[concat(variables('templateBaseUrl'), 'scripts/datanodes-configure.sh')]",
      "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh"
    ],
    "clientInstallScript": "[concat('bash datanodes-configure.sh -y',  variables('commonInstallParams'))]",
    "ubuntuSettings": {
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.2-LTS",
        "version": "latest"
      },
      "managementPort": "22",
      "extentionSettings": {
        "meta": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.0",
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          }
        },
        "data": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.0",
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          }
        }
      }
    },
    "OS": "ubuntu",
    "osSettings": "[variables(concat(variables('OS'), 'Settings'))]",
    "locationMap": {
      "ResourceGroup": "[resourceGroup().location]",
      "westus": "[parameters('location')]",
      "eastus": "[parameters('location')]",
      "eastus2": "[parameters('location')]",
      "centralus": "[parameters('location')]",
      "southcentralus": "[parameters('location')]",
      "northcentralus": "[parameters('location')]",
      "eastasia": "[parameters('location')]",
      "southeastasia": "[parameters('location')]",
      "westeurope": "[parameters('location')]",
      "northeurope": "[parameters('location')]"
    },
    "location": "[variables('locationMap')[parameters('location')]]",
    "storageAccountPrefix": "influxdb",
    "storageAccountNameShared": "[concat(variables('storageAccountPrefix'), 's', uniqueString(resourceGroup().id, deployment().name))]",
    "metaNodesIpPrefix": "10.0.0.1",
    "networkSettings": {
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "addressPrefix": "10.0.0.0/16",
      "subnet": {
        "meta": {
          "name": "meta",
          "prefix": "10.0.0.0/24",
          "vnet": "[parameters('virtualNetworkName')]"
        },
        "data": {
          "name": "data",
          "prefix": "10.0.1.0/24",
          "vnet": "[parameters('virtualNetworkName')]"
        }
      }
    },
    "lbBackEndPoolsAdded": {
      "backendPools": [
        {
          "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBE')]"
        }
      ]
    },
    "lbBackendPoolsRemoved": {
      "backendPools": []
    },
    "dataLBSettings0": "[variables('lbBackEndPoolsAdded')]",
    "dataLBSettings1": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings2": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings3": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings4": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings5": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings6": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings7": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings8": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings9": "[variables('lbBackendPoolsRemoved')]",
    "dataLBSettings": "[variables(concat('dataLBSettings', variables('clientPre')))]",
    "dataSkuSettings": {
      "Standard_D1": {
        "dataDisks": 2,
        "nodesPerStorageAccount": 6,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "dataDisks": 4,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3": {
        "dataDisks": 8,
        "nodesPerStorageAccount": 3,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_DS1": {
        "dataDisks": 2,
        "nodesPerStorageAccount": 6,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "dataDisks": 4,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "dataDisks": 8,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Premium_LRS"
      },
      "Standard_A2": {
        "dataDisks": 4,
        "nodesPerStorageAccount": 6,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "dataDisks": 8,
        "nodesPerStorageAccount": 4,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "dataDisks": 16,
        "nodesPerStorageAccount": 2,
        "storageAccountType": "Standard_LRS"
      }
    },
    "nodesPerStorageAccount": "[variables('dataSkuSettings')[parameters('vmSizeDataNodes')].nodesPerStorageAccount]",
    "storageBinPackMap": [
      "[div(sub(add(1, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(2, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(3, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(4, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(5, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(6, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(7, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(8, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(9, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(10, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(11, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(12, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(13, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(14, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(15, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(16, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(17, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(18, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(19, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(20, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(21, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(22, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(23, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(24, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(25, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(26, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(27, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(28, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(29, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(30, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(31, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(32, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(33, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(34, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(35, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(36, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(37, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(38, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(39, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(40, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(51, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(52, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(53, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(54, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(55, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(56, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(57, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(58, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(59, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(60, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]"
    ],
    "dataNodeStorageSettings": {
      "count": "[div(sub(add(parameters('vmDataNodeCount'), variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "mapping": "[variables('storageBinPackMap')]",
      "accountType": "[variables('dataSkuSettings')[parameters('vmSizeDataNodes')].storageAccountType]",
      "prefix": "[concat(variables('storageAccountPrefix'), 'd', uniqueString(resourceGroup().id, deployment().name))]"
    },
    "dataTemplateUrl": "[concat(variables('templateBaseUrl'), 'machines/data-nodes-resources.json')]"
  },
  "resources": [
    {
      "name": "meta-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('metaTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "password": {
            "value": "[parameters('password')]"
          },
          "metaNodesIpPrefix": {
            "value": "[variables('metaNodesIpPrefix')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "vmSize": {
            "value": "[parameters('vmSizeMetaNodes')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.meta]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
    {
      "name": "shared",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "loadBalancerType": {
            "value": "[parameters('loadBalancerType')]"
          },
          "ilbIpAddress": {
            "value": "10.0.0.100"
          }
        }
      }
    },
    {
      "name": "data-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dataTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "password": {
            "value": "[parameters('password')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "influxTags": {
            "value": "[parameters('influxTags')]"
          },
          "storageSettings": {
            "value": "[variables('dataNodeStorageSettings')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.data]"
          },
          "vmSize": {
            "value": "[parameters('vmSizeDataNodes')]"
          },
          "vmCount": {
            "value": "[parameters('vmDataNodeCount')]"
          },
          "namespace": {
            "value": "data-node-"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "lbBackendPools": {
            "value": "[variables('dataLBSettings')]"
          }
        }
      }
    },
    {
      "name": "jumpbox",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('jumpboxTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "password": {
            "value": "[parameters('password')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.data]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
     {
      "name": "chronograf",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'data-nodes')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('chronografTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "password": {
            "value": "[parameters('password')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.data]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    }
  ]
}
